apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1
  labels:
    app: app1
    tier: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: app1
      tier: frontend
  template:
    metadata:
      labels:
        app: app1
        tier: frontend
    spec:
      containers:
        - name: nginx
          # image: nginx:stable-perl
          image: kdprasad028/app1:v1

---
apiVersion: v1
kind: Service
metadata:
  name: app-1
spec:
  selector:
    app: app1
    tier: frontend
  ports:
    - name: nginx-svc-port
      protocol: TCP
      port: 80
      targetPort: 80
---
#Adding ingress controler, name itself ingress,. 
apiVersion: networking.k8s.io/v1
kind: Ingress   
metadata:
    name: app1
    namespace: expense
    annotations:
         kubernetes.io/ingress.class: alb
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/target-type: ip
        alb.ingress.kubernetes.io/certificate-arn: <PASTE-ACM-ARN-ID> #create certificate for Domain:*.telugudevops.online
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
        alb.ingress.kubernetes.io/tags: Environment=dev,Team=test
        alb.ingress.kubernetes.io/group.name: expense
spec:
    rules:
    - host: "app1.telugudevops.online"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: app-1
                port:
                  name: 80




#Kubectl apply -f manifest.yaml

#Kubectl get ingress